from typing import (
    List,
)

class Solution:
    """
    @param grid: a list of lists of integers
    @return: return an integer, denote the number of distinct islands
    """
    def numberof_distinct_islands(self, grid: List[List[int]]) -> int:
        # write your code here
        shapeSet = set()
        m,n = len(grid), len(grid[0])
        seen = [[False for i in range(n)] for i in range(m)]
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1 and seen[i][j] == False:
                    currShape = ['C']
                    dfs(i,j,grid,seen,currShape)
                    shapeSet.add(tuple(currShape[:]))
        print(shapeSet)
        return len(shapeSet)

def dfs(a,b,grid,seen,currShape):
    seen[a][b] = True
    dirs = [[0,1],[1,0],[-1,0],[0,-1]]
    for di in dirs:
        c,d = a+di[0], b+di[1]
        if inbounds(grid,c,d) and grid[c][d] == 1 and seen[c][d] == False:
            currShape += [getDirString(di[0],di[1])]
            dfs(c,d,grid,seen,currShape)
    currShape += ['DONE']

def inbounds(grid,c,d):
    m,n = len(grid), len(grid[0])
    if 0<=c<m and 0<=d<n:
        return True
    return False
def getDirString(a,b):
    if a == 0 and b == 1:
        return 'R'
    elif a == 1 and b == 0:
        return 'D'
    elif a == -1 and b == 0:
        return 'U'
    return 'L'

if __name__=="__main__":
    print(Solution().numberof_distinct_islands([[0,0,1,0,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1],
                                                [0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,1,1,0,1,1,0,1,0,0,1,0,0,1],
                                                [0,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,0,0,0,0,1,0,1,1,0,1,1,0,0,1,1,0],
                                                [0,0,0,1,1,0,1,1,1,0,1,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,1,1,0],
                                                [0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1],
                                                [0,1,0,1,1,0,0,1,1,1,0,0,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0],
                                                [0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,1],
                                                [1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,1,0,0,1,1,0,1],
                                                [0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1],
                                                [1,0,1,1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,0,1,0,0],
                                                [0,0,0,1,0,0,0,1,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,1,1,1,0,1,0,1,0,0,1,0,0],
                                                [0,0,1,1,1,0,0,1,0,1,1,1,1,0,0,1,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0,0,1,0,1,0,1,0,0,0,0,1],
                                                [1,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,1,0],
                                                [1,1,1,0,0,1,0,1,0,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,0,1,1,1,0,1,1,0,0],
                                                [0,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0],
                                                [1,1,1,0,0,0,1,1,1,1,0,1,1,0,1,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,0,1,1,1,0,0,0],
                                                [1,1,1,0,0,1,1,0,0,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,1,1,0,0,1,1,1,1,0,1,1,1,0,1,0,0,1,0],
                                                [0,0,1,0,0,1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,0,1,0,0,1,1,1,0,0,1],
                                                [1,0,0,0,0,1,1,1,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0],
                                                [1,1,1,0,1,0,1,1,1,0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,1,0,1],
                                                [0,0,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1],
                                                [0,0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,1,1,0,0,1,1],
                                                [0,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,0,1],
                                                [0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1],
                                                [1,1,0,1,0,1,1,1,1,0,0,0,0,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0],
                                                [0,1,1,0,0,1,0,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,1,1,0,1,1,1,1,0,1,0,0],
                                                [1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0],
                                                [1,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1,1,0,1],
                                                [0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,0,1,0,1],
                                                [1,1,0,0,1,0,1,0,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1],
                                                [0,1,0,0,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0],
                                                [0,1,1,0,1,1,1,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,0,0,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,1],
                                                [1,1,0,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0],
                                                [1,1,0,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,1,1,0,1,0,0,0,0,1,0,0,0],
                                                [1,0,1,0,1,1,0,1,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,1,0,1,0,1],
                                                [1,0,1,1,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,1,0,1,0,1,1,1,0,0,1,1,1,1],
                                                [1,0,0,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,1],
                                                [1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,1,1,0],
                                                [1,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,1,0,1,1,1,0,1,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,1,0],
                                                [0,1,0,1,1,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0],
                                                [1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,1,1,0,0,1,1],
                                                [0,1,1,0,1,0,0,0,1,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0],
                                                [0,1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,0,0,0],
                                                [0,1,1,0,1,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0,1,0,1,0,1,0,0],
                                                [0,1,1,1,0,1,0,0,1,1,0,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,1,0,0,1]]))